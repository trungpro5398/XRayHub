@{
    ViewBag.Title = "ReviewAppointments";
}

@model IEnumerable<XRayHub.Models.Appointment>
<style>
    .scheduled {
        background-color: #E0E0E0;
    }

    .completed {
        background-color: #C8E6C9;
    }

    .cancelled {
        background-color: #FFCDD2;
    }
</style>

<h2 class="my-4">Review Appointments</h2>

<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#emailModal">
    <i class="fas fa-envelope"></i> Compose Email
</button>


<div class="card mb-4">
    <div class="card-body">
        <h5 class="card-title">X-ray Filters</h5>
        <form id="filterForm">

            <div class="row">
                <!-- Date Range -->
                <div class="col-md-6">
                    <div class="form-group">
                        <label>From Date:</label>
                        <input type="date" class="form-control" id="dateFrom" placeholder="Date from">
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>To Date:</label>
                        <input type="date" class="form-control" id="dateTo" placeholder="Date to">
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>X-ray types:</label>
                        <select class="form-control" id="xrayTypeFilter">
                            <!-- Your X-ray types here. For example: -->
                            <option value="">All</option>
                            <option>Chest</option>
                            <option>Abdomen</option>
                            <option>Dental</option>
                            <option>Bone</option>
                            <option>Mammography</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Status:</label>
                        <select class="form-control" id="statusFilter">
                            <option value="">All</option>
                            <option>Scheduled</option>
                            <option>Completed</option>
                            <option>Cancelled</option>
                        </select>
                    </div>
                </div>
                <!-- Patients Filter -->
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Patient Name:</label>
                        <select id="patientID" class="form-control">
                            <option value="">Select Patient Name</option>
                            @{
                                var addedPatients = new HashSet<string>();
                            }
                            @foreach (var feedback in Model)
                            {
                                var fullName = feedback.Patient.FirstName + " " + feedback.Patient.LastName;

                                if (!addedPatients.Contains(fullName))
                                {
                                    addedPatients.Add(fullName);
                                    <option value="@feedback.Patient.PatientID">@fullName</option>
                                }
                            }

                        </select>
                    </div>
                </div>

            </div>

            <div class="form-group">
                <button type="button" class="btn btn-primary mb-3" id="applyFilters">Apply Filters</button>

            </div>
        </form>
    </div>
</div>



<table class="table table-striped mt-4">
    <thead>
        <tr>
            <th>Select</th>
            <th>Date Scheduled</th>
            <th>Patient</th>
            <th>Type of X-ray</th>
            <th>Status</th>
            <th>Reason</th>
            @*<th>Action</th>*@
        </tr>
    </thead>
    <tbody>
        @foreach (var appointment in Model)
        {
            var fullName = @appointment.Patient.FirstName + @appointment.Patient.LastName;
            <tr>
                <td><input type="checkbox" class="emailCheckbox" data-email="@appointment.Patient.Email" /></td>
                <td>@appointment.DateScheduled</td>
                <td>@fullName</td>
                <td>@appointment.TypeOfXray</td>
                <td>
                    <select class="form-control status-dropdown" data-appointment-id="@appointment.AppointmentID">
                        <option class="scheduled" value="Scheduled" @(appointment.Status == "Scheduled" ? "selected" : "")>Scheduled</option>
                        <option class="completed" value="Completed" @(appointment.Status == "Completed" ? "selected" : "")>Completed</option>
                        <option class="cancelled" value="Cancelled" @(appointment.Status == "Cancelled" ? "selected" : "")>Cancelled</option>

                    </select>
                </td>
                <td>@appointment.Reason</td>
                @*<td>
                        <button class="btn btn-sm btn-info" data-toggle="tooltip" data-placement="top" title="Edit">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-danger" data-toggle="tooltip" data-placement="top" title="Delete">
                            <i class="fas fa-trash-alt"></i>
                        </button>
                    </td>*@
            </tr>
        }
    </tbody>
</table>



<!-- Compose Email Modal -->
<div class="modal fade" id="emailModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Compose Email</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="composeEmailForm">
                    <div class="form-group">
                        <label for="subject">Subject</label>
                        <input type="text" class="form-control" id="subject" placeholder="Enter Email Subject">
                    </div>
                    <div class="form-group">
                        <label for="message">Message</label>
                        <textarea class="form-control" id="message" rows="5" placeholder="Enter your message"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="sendEmails">
                    <i class="fas fa-paper-plane"></i> Send Emails
                </button>
            </div>
        </div>
    </div>
</div>
<!-- Bootstrap CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<!-- jQuery library -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<!-- Popper JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>

<!-- Bootstrap JS -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

@section Scripts {
    <script>
        $(document).ready(function () {  // Ensure the document is fully loaded
            $(".status-dropdown").on("change", function () {
                var appointmentId = $(this).data("appointment-id");
                var newStatus = $(this).val();

                $.ajax({
                    url: "/MedicalPractitioner/UpdateAppointmentStatus",
                    type: "POST",
                    data: {
                        appointmentId: appointmentId,
                        status: newStatus
                    },
                    success: function (response) {
                        // Handle success - maybe show a toast or notification
                        console.log(response.message);
                    },
                    error: function (error) {
                        // Handle error - notify the user
                        console.error("Error updating status:", error);
                    }
                });
            });
            $(".status-dropdown").each(function () {
                var selectedOption = $(this).find("option:selected");
                $(this).css("background-color", selectedOption.css("background-color"));
            }).change(function () {
                var selectedOption = $(this).find("option:selected");
                $(this).css("background-color", selectedOption.css("background-color"));
            });
            $("#applyFilters").click(function () {
                var filters = {
                    dateFrom: $("#dateFrom").val(),
                    dateTo: $("#dateTo").val(),
                    patientID: $("#patientID").val(),
                    xrayType: $("#xrayTypeFilter").val(),
                    status: $("#statusFilter").val()
                };

                $.ajax({
                    url: "/MedicalPractitioner/FilterAppointments",
                    type: "GET",
                    data: filters,
                    success: function (response) {
                        // Assuming your server sends back a rendered partial view of the table
                        $(".table").html(response);
                    },
                    error: function (error) {
                        console.error("Error fetching filtered data:", error);
                    }
                });
            });

            $("#sendEmails").click(function () {
                var selectedEmails = [];

                // Gather selected email addresses
                $(".emailCheckbox:checked").each(function () {
                    selectedEmails.push($(this).data("email"));
                });

                // Ensure some emails are selected
                if (selectedEmails.length === 0) {
                    alert("Please select at least one recipient.");
                    return;
                }

                var emailData = {
                    Emails: selectedEmails,  // Ensure property names match those in your C# view model
                    Subject: $("#subject").val(),
                    Message: $("#message").val()
                };

                // Validation to ensure that subject and message are not empty
                if (emailData.Subject.trim() === "" || emailData.Message.trim() === "") {
                    alert("Subject and Message cannot be empty.");
                    return;
                }

                // Make an AJAX call to your server-side code to send the emails using SendGrid
                $.post("/Email/SendBulkEmails", emailData, function (response) {
                    if (response.success) {
                        alert("Emails sent successfully!");
                    } else {
                        alert("Failed to send emails: " + response.message);
                    }
                    // Close the modal and reset the form
                    $("#emailModal").modal("hide");
                    $("#composeEmailForm")[0].reset();
                });
            });
        });
    </script>

}
